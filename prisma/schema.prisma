// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["strictUndefinedChecks"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Manga {
  pid              Int        @id @default(autoincrement())
  uuid             String     @unique
  path             String     @unique
  coverFilename    String?    @map("cover_filename")
  title            String?
  originalTitle    String?    @map("original_title")
  fullTitle        String?    @map("full_title")
  fileModifiedTime DateTime?  @map("file_modified_time")
  createdAt        DateTime   @default(now()) @map("created_at")
  updatedAt        DateTime   @default(now()) @map("updated_at")
  images           Image[]
  mangaTags        MangaTag[]

  @@map("manga")
}

model Image {
  pid       Int      @id @default(autoincrement())
  uuid      String   @unique
  mangaUuid String   @map("manga_uuid")
  entryName String   @map("entry_name")
  mangaPath String   @map("manga_path")
  filename  String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  manga     Manga    @relation(fields: [mangaUuid], references: [uuid])

  @@index([mangaUuid])
  @@map("image")
}

model UpdateRecord {
  pid       Int      @id @default(autoincrement())
  uuid      String   @unique
  progress  Int
  total     Int
  status    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("update_record")
}

model Tag {
  pid       Int      @id @default(autoincrement())
  uuid      String   @unique
  name      String
  type      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@index([name, type])
  @@map("tag")
}

model MangaTag {
  pid       Int      @id @default(autoincrement())
  mangaUuid String   @map("manga_uuid")
  tagUuid   String   @map("tag_uuid")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  manga     Manga    @relation(fields: [mangaUuid], references: [uuid])

  @@unique([mangaUuid, tagUuid])
  @@map("manga_tag")
}
